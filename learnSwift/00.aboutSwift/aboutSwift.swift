//
//  aboutSwift.swift
//  learnSwift
//
//  Created by Sang Hyeon kim on 2022/07/02.
//

/**
        스위프트의 언어적 특성 ( Safe, Fast, Expressive)
 
 1. 안전성
 스위프는 안전한 프로그래밍을 지향한다. 소프트웨어가 배포되기 전, 즉 프로그래밍하는 중에 프로그래머가 저지를 수 있는 엄격한 문법을 적용해서 미연에 방지하고 한다. 스위프트는 옵셔널이라는 기능을 비롯하여  'guard' 구분, 오류 처리 강력한 타입 통제 등을 통해 스위프트는 안전한 프로그래밍을 구현하고 있다.
 
 
 2. 신속성
 스위프트는 C 언으롤 기반으로한 C, C++, Objective-C 와 같은 프로그래밍 언어를 대체하려는 목적으로 만들졌다. 실행 속도의 최적화뿐만 아니라 컴파일러를 지속적으로 개량해 더 빠른 컴파일 성능을 구현해나가고 있다.
 
 3. 더 나은 표현성
 스위프트는 여러 가지 프로그래밍 패러다임을 차용한 다중 패러다임 프로그래밍 언어이다. 크게 보면 명령형 프로그래밍 패러다임, 객체지향 프로그래밍 패러다임, 함수형 프로그래밍 패러다임, 프로토콜 지향 프로그래밍 패러다미을 차용했다. 정확하게는 명령형과 객체지향 프로그래밍 패러다임을 기반으로 한 함수형 프로그래밍 패러다임과 프로토콜 지향 프로그래밍 패러다임을 지향한다.
 결과적으로 스퓌프트에서 가장 강조하는 부분은 함수형 프로그래밍 패러다임과 프로토콜 지향 프로그래밍 패러다임이다.
            
    
 */
